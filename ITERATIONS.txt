
Iteration 1
-----------

Get Rails app up and running

Get basic model in place:
    Location (restaurant/pub)
    City (town/city/village)
    Dish (menu item reviewed)

as in, I ate Dish at Location in City.

Check all is well, 'rake test'

Iteration 2
-----------

Add validation to model
    Location needs a name, should be simple
    City needs a name, name should be unique (or should it?!)
    Dish needs a name

Investigate and set up unit test framework


Iteration 3
-----------

Create front page: find a roast, rate your roast

Add basic login/logout functionality


Iteration 4
-----------

Add ability to add a description to a location, but must be able to back out changes.


Iteration 5
-----------

Add editor control to location description update.

Ensure HTML is sanitized on display.

Iteration 6
-----------

Add ability to add review to pub.
    - location can have multiple reviews
    - review can only have one pub.
    - Locations have many Dishes, which can have many Reviews.

Iteration 7
-----------

Tidy up layout, provide basic navigation: find pub, rate pub.

Iteration 8
-----------

Set up method for user to set their 'current location' - the pub that they are in.
    - key UX for later adding a rating


Iteration 9
-----------

More navigation fixes
    - add display of user and location in menu bar
    - add terms and privacy controllers

Iteration 10
------------

Set up review process.
    - select/add location
    - select/add dish
    - write review

Iteration 11
------------

Allow new user registrations
    - simple for now

Iteration 12
------------

Add selection of city

Iteration 13
------------

Configure finer grained user authorization
    - currently, we just have 'anon' (logged out) and 'user' (logged in)
    - simplest multi-level auth scheme would be escalating levels
        - as in, a many-1 mapping between User and Role models
        - eg 'admin' > 'city_moderator' > 'location_moderator' > 'dish_moderator' > 'review_moderator' > 'user'
          - for example
    - alternatively, can have a many-many relationship between users and roles
        - so user can be a city_moderator AND a pub_moderator
    - we also want 'general users' to be able to add new content, and edit content that they have added.
        - otherwise, we have to populate the database ourselves!
    - go for SIMPLE for now - escalating roles
        - for now, encode into methods in User model:
            user.is_admin
            user.is_full_moderator (includes is_admin users)
            user.is_location_moderator (includes is_location_moderator users)
            user.is_dish_moderator (...)
            user.is_review_moderator (...)




